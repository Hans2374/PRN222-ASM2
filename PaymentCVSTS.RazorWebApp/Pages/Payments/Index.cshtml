@page
@model PaymentCVSTS.RazorWebApp.Pages.Payments.IndexModel

@{
    ViewData["Title"] = "Payments";
}

<h1>Payments</h1>

<div class="row">
    <div class="col-md-12">
        <form method="get" class="d-flex flex-wrap align-items-end mb-3">
            <div class="col-md-3 pe-2 mb-3">
                <div class="form-group">
                    <label class="control-label">Child ID</label>
                    <input type="number" name="ChildId" class="form-control" value="@Model.ChildId" />
                </div>
            </div>
            <div class="col-md-3 pe-2 mb-3">
                <div class="form-group">
                    <label class="control-label">Payment Status</label>
                    <select name="PaymentStatus" class="form-control" asp-items="@ViewData["PaymentStatus"] as SelectList">
                        <option value="">-- Select Status --</option>
                    </select>
                </div>
            </div>
            <div class="col-md-3 pe-2 mb-3">
                <div class="form-group">
                    <label class="control-label">Payment Date</label>
                    <input type="date" name="PaymentDate" class="form-control" value="@(Model.PaymentDate?.ToString("yyyy-MM-dd"))" />
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <input type="submit" class="btn btn-success me-2" value="Search" />
                <a asp-page="Create" class="btn btn-primary">Create New Payment</a>
            </div>
        </form>
    </div>
</div>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index"
                   asp-route-sortField="Amount"
                   asp-route-sortDirection="@(Model.SortField == "Amount" && Model.SortDirection == "asc" ? "desc" : "asc")"
                   asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                   asp-route-PaymentStatus="@Model.PaymentStatus"
                   asp-route-ChildId="@Model.ChildId">
                    Amount
                    @if (Model.SortField == "Amount")
                    {
                        <i class="bi @(Model.SortDirection == "asc" ? "bi-sort-down" : "bi-sort-up")"></i>
                    }
                    else
                    {
                        <i class="bi bi-sort"></i>
                    }
                </a>
            </th>
            <th>Status</th>
            <th>Method</th>
            <th>
                <a asp-page="./Index"
                   asp-route-sortField="PaymentDate"
                   asp-route-sortDirection="@(Model.SortField == "PaymentDate" && Model.SortDirection == "asc" ? "desc" : "asc")"
                   asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                   asp-route-PaymentStatus="@Model.PaymentStatus"
                   asp-route-ChildId="@Model.ChildId">
                    Date
                    @if (Model.SortField == "PaymentDate")
                    {
                        <i class="bi @(Model.SortDirection == "asc" ? "bi-sort-down" : "bi-sort-up")"></i>
                    }
                    else
                    {
                        <i class="bi bi-sort"></i>
                    }
                </a>
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="idPayment">
        @foreach (var item in Model.Payments)
        {
            <tr id="@item.PaymentId">
                <td>
                    $@item.Amount.ToString("N2")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentStatus)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentMethod)
                </td>
                <td>
                    @item.PaymentDate.ToString("dd/MM/yyyy")
                </td>
                <td>
                    <a asp-page="./Details" asp-route-id="@item.PaymentId"
                       asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                       asp-route-PaymentStatus="@Model.PaymentStatus"
                       asp-route-ChildId="@Model.ChildId">Details</a> |
                    <a asp-page="./Edit" asp-route-id="@item.PaymentId"
                       asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                       asp-route-PaymentStatus="@Model.PaymentStatus"
                       asp-route-ChildId="@Model.ChildId">Edit</a> |
                    <button class="btn btn-danger btn-sm delete-payment" data-id="@item.PaymentId">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            console.log("Initializing SignalR connection");
            var connection = new signalR.HubConnectionBuilder()
                .withUrl("/paymentHub")
                .configureLogging(signalR.LogLevel.Information)
                .build();

            // Function to format date as DD/MM/YYYY
            function formatDate(dateString) {
                if (!dateString) return "";
                const date = new Date(dateString);
                return `${String(date.getDate()).padStart(2, '0')}/${String(date.getMonth() + 1).padStart(2, '0')}/${date.getFullYear()}`;
            }

            // Function to format currency
            function formatCurrency(amount) {
                return `${parseFloat(amount).toFixed(2)}`;
            }

            // Receive payment from hub
            connection.on("Receive_Payment", function (payment) {
                console.log("📩 Received new payment data:", payment);

                // Create HTML for new payment row
                var trPayment = `
                    <tr id="${payment.paymentId}">
                        <td>${formatCurrency(payment.amount)}</td>
                        <td>${payment.paymentStatus}</td>
                        <td>${payment.paymentMethod}</td>
                        <td>${formatDate(payment.paymentDate)}</td>
                        <td>
                            <a href="./Details?id=${payment.paymentId}&PaymentDate=@(Model.PaymentDate?.ToString("yyyy-MM-dd"))&PaymentStatus=@Model.PaymentStatus&ChildId=@Model.ChildId">Details</a> |
                            <a href="./Edit?id=${payment.paymentId}&PaymentDate=@(Model.PaymentDate?.ToString("yyyy-MM-dd"))&PaymentStatus=@Model.PaymentStatus&ChildId=@Model.ChildId">Edit</a> |
                            <button class="btn btn-danger btn-sm delete-payment" data-id="${payment.paymentId}">Delete</button>
                        </td>
                    </tr>`;

                // Append the new row to the table
                $("#idPayment").append(trPayment);
            });

            // Receive update notification from hub
            connection.on("Receive_UpdatePayment", function (payment) {
                console.log("🔄 Received updated payment data:", payment);

                // Find the payment row by ID
                var existingRow = $(`#${payment.paymentId}`);
                if (existingRow.length) {
                    // Replace the row contents with updated data
                    existingRow.html(`
                        <td>${formatCurrency(payment.amount)}</td>
                        <td>${payment.paymentStatus}</td>
                        <td>${payment.paymentMethod}</td>
                        <td>${formatDate(payment.paymentDate)}</td>
                        <td>
                            <a href="./Details?id=${payment.paymentId}&PaymentDate=@(Model.PaymentDate?.ToString("yyyy-MM-dd"))&PaymentStatus=@Model.PaymentStatus&ChildId=@Model.ChildId">Details</a> |
                            <a href="./Edit?id=${payment.paymentId}&PaymentDate=@(Model.PaymentDate?.ToString("yyyy-MM-dd"))&PaymentStatus=@Model.PaymentStatus&ChildId=@Model.ChildId">Edit</a> |
                            <button class="btn btn-danger btn-sm delete-payment" data-id="${payment.paymentId}">Delete</button>
                        </td>
                    `);
                }
            });

            // Receive delete notification from hub
            connection.on("Receive_DeletePayment", function (id) {
                console.log("🗑️ Received delete notification for payment ID:", id);
                $(`#${id}`).remove();
            });

            // Start connection
            connection.start()
                .then(function () {
                    console.log("✅ SignalR connected successfully");

                    // Handle delete button clicks
                    $(document).on("click", ".delete-payment", function() {
                        var paymentId = $(this).data("id");
                        if(confirm("Are you sure you want to delete this payment?")) {
                            connection.invoke("DeletePayment", paymentId)
                                .catch(function (err) {
                                    console.error("Error deleting payment:", err);
                                });
                        }
                    });
                })
                .catch(function (err) {
                    console.error("❌ SignalR connection error:", err.toString());
                });

            // Initialize the selected status in the dropdown
            $('select[name="PaymentStatus"]').val('@Model.PaymentStatus');
        });
    </script>
}