@page
@model PaymentCVSTS.RazorWebApp.Pages.Payments.IndexModel

@{
    ViewData["Title"] = "Payments";
}

<h1>Payments</h1>

<div class="row">
    <div class="col-md-12">
        <form method="get" class="d-flex flex-wrap align-items-end mb-3">
            <div class="col-md-3 pe-2 mb-3">
                <div class="form-group">
                    <label class="control-label">Child ID</label>
                    <input type="number" name="ChildId" class="form-control" value="@Model.ChildId" />
                </div>
            </div>
            <div class="col-md-3 pe-2 mb-3">
                <div class="form-group">
                    <label class="control-label">Payment Status</label>
                    <select name="PaymentStatus" class="form-control" asp-items="@ViewData["PaymentStatus"] as SelectList">
                        <option value="">-- Select Status --</option>
                    </select>
                </div>
            </div>
            <div class="col-md-3 pe-2 mb-3">
                <div class="form-group">
                    <label class="control-label">Payment Date</label>
                    <input type="date" name="PaymentDate" class="form-control" value="@(Model.PaymentDate?.ToString("yyyy-MM-dd"))" />
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <input type="submit" class="btn btn-success me-2" value="Search" />
                <a asp-page="Create" class="btn btn-primary">Create New Payment</a>
            </div>
        </form>
    </div>
</div>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>Amount</th>
            <th>Status</th>
            <th>Method</th>
            <th>Date</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="idPayment">
        @foreach (var item in Model.Payments)
        {
            <tr id="@item.PaymentId">
                <td>
                    @((int)item.Amount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentStatus)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentMethod)
                </td>
                <td>
                    @(item.PaymentDate.ToString("yyyy-MM-dd"))
                </td>
                <td>
                    <a asp-page="./Details" asp-route-id="@item.PaymentId"
                       asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                       asp-route-PaymentStatus="@Model.PaymentStatus"
                       asp-route-ChildId="@Model.ChildId"
                       asp-route-currentPage="@Model.CurrentPage">Details</a> |
                    <a asp-page="./Edit" asp-route-id="@item.PaymentId"
                       asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                       asp-route-PaymentStatus="@Model.PaymentStatus"
                       asp-route-ChildId="@Model.ChildId"
                       asp-route-currentPage="@Model.CurrentPage">Edit</a> |
                    <button class="btn btn-danger btn-sm delete-payment" data-id="@item.PaymentId">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-page="./Index"
                       asp-route-currentPage="1"
                       asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                       asp-route-PaymentStatus="@Model.PaymentStatus"
                       asp-route-ChildId="@Model.ChildId">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-page="./Index"
                       asp-route-currentPage="@(Model.CurrentPage - 1)"
                       asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                       asp-route-PaymentStatus="@Model.PaymentStatus"
                       asp-route-ChildId="@Model.ChildId">Previous</a>
                </li>
            }

            @{
                int startPage = Math.Max(1, Model.CurrentPage - 2);
                int endPage = Math.Min(Model.TotalPages, startPage + 4);
                startPage = Math.Max(1, endPage - 4);
            }

            @for (var i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-page="./Index"
                       asp-route-currentPage="@i"
                       asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                       asp-route-PaymentStatus="@Model.PaymentStatus"
                       asp-route-ChildId="@Model.ChildId">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-page="./Index"
                       asp-route-currentPage="@(Model.CurrentPage + 1)"
                       asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                       asp-route-PaymentStatus="@Model.PaymentStatus"
                       asp-route-ChildId="@Model.ChildId">Next</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-page="./Index"
                       asp-route-currentPage="@Model.TotalPages"
                       asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                       asp-route-PaymentStatus="@Model.PaymentStatus"
                       asp-route-ChildId="@Model.ChildId">Last</a>
                </li>
            }
        </ul>
    </nav>
}

@section Scripts {
    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            console.log("Initializing SignalR connection");
            var connection = new signalR.HubConnectionBuilder().withUrl("/paymentHub").build();

            // Receive payment from hub
            connection.on("Receive_Payment", function (payment) {
                console.log("📩 Received payment data:", payment);

                var trPayment = `
                    <tr id="${payment.paymentId}">
                        <td>${Math.floor(payment.amount)}</td>
                        <td>${payment.paymentStatus}</td>
                        <td>${payment.paymentMethod}</td>
                        <td>${payment.paymentDate ? payment.paymentDate.split('T')[0] : ""}</td>
                        <td>
                            <a href="./Details?id=${payment.paymentId}">Details</a> |
                            <a href="./Edit?id=${payment.paymentId}">Edit</a> |
                            <button class="btn btn-danger btn-sm delete-payment" data-id="${payment.paymentId}">Delete</button>
                        </td>
                    </tr>`;
                $("#idPayment").append(trPayment);
            });

            // Receive update notification from hub
            connection.on("Receive_UpdatePayment", function (payment) {
                console.log("🔄 Received updated payment data:", payment);

                // Find the payment row by ID
                var existingRow = $(`#${payment.paymentId}`);
                if (existingRow.length) {
                    // Replace the row contents with updated data
                    existingRow.html(`
                        <td>${Math.floor(payment.amount)}</td>
                        <td>${payment.paymentStatus}</td>
                        <td>${payment.paymentMethod}</td>
                        <td>${payment.paymentDate ? payment.paymentDate.split('T')[0] : ""}</td>
                        <td>
                            <a href="./Details?id=${payment.paymentId}">Details</a> |
                            <a href="./Edit?id=${payment.paymentId}">Edit</a> |
                            <button class="btn btn-danger btn-sm delete-payment" data-id="${payment.paymentId}">Delete</button>
                        </td>
                    `);
                }
            });

            // Receive delete notification from hub
            connection.on("Receive_DeletePayment", function (id) {
                console.log("🗑️ Received delete notification for payment ID:", id);
                $(`#${id}`).remove();
            });

            // Start connection
            connection.start().then(function () {
                console.log("SignalR connected");

                // Handle delete button clicks
                $(document).on("click", ".delete-payment", function() {
                    var paymentId = $(this).data("id");
                    if(confirm("Are you sure you want to delete this payment?")) {
                        connection.invoke("DeletePayment", paymentId)
                            .catch(function (err) {
                                console.error(err);
                            });
                    }
                });
            }).catch(function (err) {
                console.error("SignalR connection error:", err.toString());
            });

            // Initialize the selected status in the dropdown
            $('select[name="PaymentStatus"]').val('@Model.PaymentStatus');
        });
    </script>
}