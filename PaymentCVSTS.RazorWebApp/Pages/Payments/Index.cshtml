@page
@model PaymentCVSTS.RazorWebApp.Pages.Payments.IndexModel

@{
    ViewData["Title"] = "Payments";
}

<h1>Payments</h1>

<div class="row">
    <div class="col-md-12">
        <form method="get" class="d-flex flex-wrap align-items-end mb-3">
            <div class="col-md-3 pe-2 mb-3">
                <div class="form-group">
                    <label class="control-label">Payment Method</label>
                    <select name="PaymentMethod" class="form-control" asp-items="@ViewData["PaymentMethods"] as SelectList">
                        <option value="">-- Select Method --</option>
                    </select>
                </div>
            </div>
            <div class="col-md-3 pe-2 mb-3">
                <div class="form-group">
                    <label class="control-label">Payment Status</label>
                    <select name="PaymentStatus" class="form-control" asp-items="@ViewData["PaymentStatus"] as SelectList">
                        <option value="">-- Select Status --</option>
                    </select>
                </div>
            </div>
            <div class="col-md-3 pe-2 mb-3">
                <div class="form-group">
                    <label class="control-label">Payment Date</label>
                    <input type="date" name="PaymentDate" class="form-control" value="@(Model.PaymentDate?.ToString("yyyy-MM-dd"))" />
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <input type="submit" class="btn btn-success me-2" value="Search" />
                <a asp-page="Create" class="btn btn-primary">Create New Payment</a>
            </div>
        </form>
    </div>
</div>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index"
                   asp-route-sortField="Amount"
                   asp-route-sortDirection="@(Model.SortField == "Amount" && Model.SortDirection == "asc" ? "desc" : "asc")"
                   asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                   asp-route-PaymentStatus="@Model.PaymentStatus"
                   asp-route-PaymentMethod="@Model.PaymentMethod"
                   asp-route-currentPage="@Model.CurrentPage">
                    Amount
                    @if (Model.SortField == "Amount")
                    {
                        <i class="bi @(Model.SortDirection == "asc" ? "bi-sort-down" : "bi-sort-up")"></i>
                    }
                    else
                    {
                        <i class="bi bi-sort"></i>
                    }
                </a>
            </th>
            <th>Status</th>
            <th>Method</th>
            <th>
                <a asp-page="./Index"
                   asp-route-sortField="PaymentDate"
                   asp-route-sortDirection="@(Model.SortField == "PaymentDate" && Model.SortDirection == "asc" ? "desc" : "asc")"
                   asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                   asp-route-PaymentStatus="@Model.PaymentStatus"
                   asp-route-PaymentMethod="@Model.PaymentMethod"
                   asp-route-currentPage="@Model.CurrentPage">
                    Date
                    @if (Model.SortField == "PaymentDate")
                    {
                        <i class="bi @(Model.SortDirection == "asc" ? "bi-sort-down" : "bi-sort-up")"></i>
                    }
                    else
                    {
                        <i class="bi bi-sort"></i>
                    }
                </a>
            </th>
            <th>Service Type</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="idPayment">
        @foreach (var item in Model.Payments)
        {
            <tr id="@item.PaymentId">
                <td>
                    $@item.Amount.ToString("N2")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentStatus)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentMethod)
                </td>
                <td>
                    @item.PaymentDate.ToString("dd/MM/yyyy")
                </td>
                <td>
                    @(item.Appointment?.ServiceType ?? "N/A")
                </td>
                <td>
                    <a asp-page="./Details" asp-route-id="@item.PaymentId"
                       asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                       asp-route-PaymentStatus="@Model.PaymentStatus"
                       asp-route-PaymentMethod="@Model.PaymentMethod">Details</a> |
                    <a asp-page="./Edit" asp-route-id="@item.PaymentId"
                       asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                       asp-route-PaymentStatus="@Model.PaymentStatus"
                       asp-route-PaymentMethod="@Model.PaymentMethod">Edit</a> |
                    <a asp-page="./Delete" asp-route-id="@item.PaymentId"
                       asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                       asp-route-PaymentStatus="@Model.PaymentStatus"
                       asp-route-PaymentMethod="@Model.PaymentMethod" class="text-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Controls -->
<div class="d-flex justify-content-between align-items-center mt-4">
    <div>
        <span>Showing page @Model.CurrentPage of @Model.TotalPages (@Model.TotalItems total records)</span>
    </div>

    @if (Model.TotalPages > 1)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <!-- First Page -->
                <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                    <a class="page-link"
                       asp-page="./Index"
                       asp-route-currentPage="1"
                       asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                       asp-route-PaymentStatus="@Model.PaymentStatus"
                       asp-route-PaymentMethod="@Model.PaymentMethod"
                       asp-route-sortField="@Model.SortField"
                       asp-route-sortDirection="@Model.SortDirection">First</a>
                </li>

                <!-- Previous Page -->
                <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                    <a class="page-link"
                       asp-page="./Index"
                       asp-route-currentPage="@(Model.CurrentPage - 1)"
                       asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                       asp-route-PaymentStatus="@Model.PaymentStatus"
                       asp-route-PaymentMethod="@Model.PaymentMethod"
                       asp-route-sortField="@Model.SortField"
                       asp-route-sortDirection="@Model.SortDirection">Previous</a>
                </li>

                <!-- Page Numbers -->
                @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link"
                           asp-page="./Index"
                           asp-route-currentPage="@i"
                           asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                           asp-route-PaymentStatus="@Model.PaymentStatus"
                           asp-route-PaymentMethod="@Model.PaymentMethod"
                           asp-route-sortField="@Model.SortField"
                           asp-route-sortDirection="@Model.SortDirection">@i</a>
                    </li>
                }

                <!-- Next Page -->
                <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                    <a class="page-link"
                       asp-page="./Index"
                       asp-route-currentPage="@(Model.CurrentPage + 1)"
                       asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                       asp-route-PaymentStatus="@Model.PaymentStatus"
                       asp-route-PaymentMethod="@Model.PaymentMethod"
                       asp-route-sortField="@Model.SortField"
                       asp-route-sortDirection="@Model.SortDirection">Next</a>
                </li>

                <!-- Last Page -->
                <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                    <a class="page-link"
                       asp-page="./Index"
                       asp-route-currentPage="@Model.TotalPages"
                       asp-route-PaymentDate="@Model.PaymentDate?.ToString("yyyy-MM-dd")"
                       asp-route-PaymentStatus="@Model.PaymentStatus"
                       asp-route-PaymentMethod="@Model.PaymentMethod"
                       asp-route-sortField="@Model.SortField"
                       asp-route-sortDirection="@Model.SortDirection">Last</a>
                </li>
            </ul>
        </nav>
    }
</div>

@section Scripts {
    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            console.log("Initializing SignalR connection");
            var connection = new signalR.HubConnectionBuilder()
                .withUrl("/paymentHub")
                .configureLogging(signalR.LogLevel.Information)
                .build();

            // Function to format date as DD/MM/YYYY
            function formatDate(dateString) {
                if (!dateString) return "";
                const date = new Date(dateString);
                return `${String(date.getDate()).padStart(2, '0')}/${String(date.getMonth() + 1).padStart(2, '0')}/${date.getFullYear()}`;
            }

            // Function to format currency
            function formatCurrency(amount) {
                return `$${parseFloat(amount).toFixed(2)}`;
            }

            // Receive payment from hub
            connection.on("Receive_Payment", function (payment) {
                console.log("📩 Received new payment data:", payment);

                // Only add to current page if we're on the first page (most recent items)
                if (@Model.CurrentPage === 1) {
                    // Create HTML for new payment row
                    var trPayment = `
                        <tr id="${payment.paymentId}">
                            <td>${formatCurrency(payment.amount)}</td>
                            <td>${payment.paymentStatus}</td>
                            <td>${payment.paymentMethod}</td>
                            <td>${formatDate(payment.paymentDate)}</td>
                            <td>${payment.appointment?.serviceType || "N/A"}</td>
                            <td>
                                <a href="./Details?id=${payment.paymentId}&PaymentDate=@(Model.PaymentDate?.ToString("yyyy-MM-dd"))&PaymentStatus=@Model.PaymentStatus&PaymentMethod=@Model.PaymentMethod">Details</a> |
                                <a href="./Edit?id=${payment.paymentId}&PaymentDate=@(Model.PaymentDate?.ToString("yyyy-MM-dd"))&PaymentStatus=@Model.PaymentStatus&PaymentMethod=@Model.PaymentMethod">Edit</a> |
                                <a href="./Delete?id=${payment.paymentId}&PaymentDate=@(Model.PaymentDate?.ToString("yyyy-MM-dd"))&PaymentStatus=@Model.PaymentStatus&PaymentMethod=@Model.PaymentMethod" class="text-danger">Delete</a>
                            </td>
                        </tr>`;

                    // Add at the top of the table for newest first sorting
                    $("#idPayment").prepend(trPayment);

                    // Remove the last row if we now have more than page size
                    if ($("#idPayment tr").length > @Model.PageSize) {
                        $("#idPayment tr:last-child").remove();
                    }
                }
            });

            // Receive update notification from hub
            connection.on("Receive_UpdatePayment", function (payment) {
                console.log("🔄 Received updated payment data:", payment);

                // Find the payment row by ID
                var existingRow = $(`#${payment.paymentId}`);
                if (existingRow.length) {
                    // Replace the row contents with updated data
                    existingRow.html(`
                        <td>${formatCurrency(payment.amount)}</td>
                        <td>${payment.paymentStatus}</td>
                        <td>${payment.paymentMethod}</td>
                        <td>${formatDate(payment.paymentDate)}</td>
                        <td>${payment.appointment?.serviceType || "N/A"}</td>
                        <td>
                            <a href="./Details?id=${payment.paymentId}&PaymentDate=@(Model.PaymentDate?.ToString("yyyy-MM-dd"))&PaymentStatus=@Model.PaymentStatus&PaymentMethod=@Model.PaymentMethod">Details</a> |
                            <a href="./Edit?id=${payment.paymentId}&PaymentDate=@(Model.PaymentDate?.ToString("yyyy-MM-dd"))&PaymentStatus=@Model.PaymentStatus&PaymentMethod=@Model.PaymentMethod">Edit</a> |
                            <a href="./Delete?id=${payment.paymentId}&PaymentDate=@(Model.PaymentDate?.ToString("yyyy-MM-dd"))&PaymentStatus=@Model.PaymentStatus&PaymentMethod=@Model.PaymentMethod" class="text-danger">Delete</a>
                        </td>
                    `);
                }
            });

            // Receive delete notification from hub
            connection.on("Receive_DeletePayment", function (id) {
                console.log("🗑️ Received delete notification for payment ID:", id);
                $(`#${id}`).remove();
            });

            // Start connection
            connection.start()
                .then(function () {
                    console.log("✅ SignalR connected successfully");

                    // Handle delete button clicks - Removed in favor of direct link to Delete page
                    // $(document).on("click", ".delete-payment", function() {
                    //     var paymentId = $(this).data("id");
                    //     if(confirm("Are you sure you want to delete this payment?")) {
                    //         connection.invoke("DeletePayment", paymentId)
                    //             .catch(function (err) {
                    //                 console.error("Error deleting payment:", err);
                    //             });
                    //     }
                    // });
                })
                .catch(function (err) {
                    console.error("❌ SignalR connection error:", err.toString());
                });
        });
    </script>
}