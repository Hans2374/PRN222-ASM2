@page
@model PaymentCVSTS.RazorWebApp.Pages.Payments.DeleteModel

@{
    ViewData["Title"] = "Delete Payment";
}

<h1>Delete Payment</h1>

<div>
    <h4>Payment Details</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Payment.PaymentId)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Payment.PaymentId)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Payment.Amount)
        </dt>
        <dd class="col-sm-9">
            $@((int)Model.Payment.Amount)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Payment.PaymentStatus)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Payment.PaymentStatus)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Payment.PaymentMethod)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Payment.PaymentMethod)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Payment.PaymentDate)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Payment.PaymentDate)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Payment.AppointmentId)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Payment.AppointmentId)
        </dd>
    </dl>

    <div class="alert alert-danger">
        <i class="bi bi-exclamation-triangle-fill me-2"></i>
        <strong>Warning:</strong> Are you sure you want to delete this payment? This action cannot be undone.
    </div>

    <div>
        <input type="hidden" id="PaymentId" value="@Model.Payment.PaymentId" />
        <button type="button" id="deleteButton" class="btn btn-danger">
            <i class="bi bi-trash"></i> Delete
        </button>
        <a asp-page="./Index" class="btn btn-secondary">Cancel</a>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex align-items-center mb-3">
                    <i class="bi bi-exclamation-triangle-fill text-danger fs-1 me-3"></i>
                    <div>
                        <p class="mb-0">Are you absolutely sure you want to delete this payment?</p>
                        <p class="fw-bold mb-0">This action cannot be undone.</p>
                    </div>
                </div>

                <div class="card">
                    <div class="card-header bg-light">
                        <strong>Payment Details</strong>
                    </div>
                    <div class="card-body">
                        <p><strong>ID:</strong> @Model.Payment.PaymentId</p>
                        <p><strong>Amount:</strong> $@((int)Model.Payment.Amount)</p>
                        <p><strong>Status:</strong> @Model.Payment.PaymentStatus</p>
                        <p class="mb-0"><strong>Date:</strong> @Model.Payment.PaymentDate.ToString("yyyy-MM-dd")</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                    <i class="bi bi-trash"></i> Permanently Delete
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Toast Container -->
<div id="toastContainer" class="position-fixed bottom-0 end-0 p-3" style="z-index: 9999"></div>

@section Scripts {
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize SignalR connection
            var connection = new signalR.HubConnectionBuilder()
                .withUrl("/paymentHub")
                .build();

            // Start connection
            connection.start().then(function () {
                console.log("SignalR connected");
                $("#deleteButton").prop("disabled", false);
            }).catch(function (err) {
                console.error("SignalR connection error:", err.toString());
                showToast("Connection error: " + err.message, "error");
            });

            // Function to show toast messages
            function showToast(message, type = "success") {
                const bgClass = type === "success" ? "bg-success" : "bg-danger";
                const toastId = "toast_" + Date.now();

                const toast = `
                    <div id="${toastId}" class="toast align-items-center text-white ${bgClass} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body">
                                ${message}
                            </div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                `;

                $("#toastContainer").append(toast);

                const toastElement = new bootstrap.Toast(document.getElementById(toastId), {
                    delay: 3000
                });
                toastElement.show();

                // Remove toast element after it's hidden
                $(`#${toastId}`).on('hidden.bs.toast', function () {
                    $(this).remove();
                });
            }

            // Open confirmation modal when delete button is clicked
            $("#deleteButton").click(function() {
                $("#confirmDeleteModal").modal("show");
            });

            // Handle final delete confirmation
            $("#confirmDeleteBtn").click(function() {
                var paymentId = parseInt($("#PaymentId").val());

                // Show loading state
                $(this).prop("disabled", true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Deleting...');

                connection.invoke("DeletePayment", paymentId)
                    .then(function () {
                        // Show success message
                        showToast("Payment successfully deleted");

                        // Redirect after a short delay
                        setTimeout(function() {
                            window.location.href = "./Index";
                        }, 1000);
                    })
                    .catch(function (err) {
                        console.error(err);
                        showToast("Error deleting payment: " + err.message, "error");

                        // Reset button state
                        $("#confirmDeleteBtn").prop("disabled", false)
                            .html('<i class="bi bi-trash"></i> Permanently Delete');
                    });
            });
        });
    </script>
}