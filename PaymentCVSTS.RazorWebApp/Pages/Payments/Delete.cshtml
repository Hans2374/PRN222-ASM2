@page
@model PaymentCVSTS.RazorWebApp.Pages.Payments.DeleteModel

@{
    ViewData["Title"] = "Delete Payment";
}

<h1>Delete Payment</h1>

<h3>Are you sure you want to delete this payment?</h3>
<div>
    <h4>Payment Details</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Payment.PaymentId)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Payment.PaymentId)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Payment.Amount)
        </dt>
        <dd class="col-sm-9">
            $@Model.Payment.Amount.ToString("N2")
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Payment.PaymentStatus)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Payment.PaymentStatus)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Payment.PaymentMethod)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Payment.PaymentMethod)
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Payment.PaymentDate)
        </dt>
        <dd class="col-sm-9">
            @Model.Payment.PaymentDate.ToString("dd/MM/yyyy")
        </dd>
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Payment.AppointmentId)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Payment.AppointmentId)
        </dd>
        @if (Model.Payment.Appointment != null)
        {
            <dt class="col-sm-3">
                Service Type
            </dt>
            <dd class="col-sm-9">
                @(Model.Payment.Appointment.ServiceType ?? "N/A")
            </dd>
        }
    </dl>

    <form id="deleteForm">
        <input type="hidden" id="paymentId" value="@Model.Payment.PaymentId" />

        <button type="button" id="deleteButton" class="btn btn-danger">Delete</button> |
        <a asp-page="./Index" class="btn btn-secondary">Cancel</a>
    </form>
</div>

@section Scripts {
    <script src="~/js/signalr/dist/browser/signalr.min.js"></script>
    <script>
        // Initialize when document is ready
        document.addEventListener('DOMContentLoaded', function() {
            // Connection variable
            let connection;

            // Initialize connection
            async function initConnection() {
                if (connection) return connection;

                connection = new signalR.HubConnectionBuilder()
                    .withUrl("/paymentHub")
                    .configureLogging(signalR.LogLevel.Information)
                    .build();

                try {
                    await connection.start();
                    console.log("Connected to SignalR hub");
                    return connection;
                } catch (err) {
                    console.error("SignalR Connection failed: ", err);
                    throw err;
                }
            }

            // Delete payment function
            async function deletePayment(paymentId) {
                const conn = await initConnection();
                console.log("Sending delete request for payment ID:", paymentId);
                await conn.invoke("DeletePayment", paymentId);
            }

            // Initialize connection
            initConnection();

            // Handle delete button click
            document.getElementById('deleteButton').addEventListener('click', async function() {
                // No confirmation dialog - the page itself is the confirmation

                const paymentId = parseInt(document.getElementById('paymentId').value);

                try {
                    // Disable button and show loading
                    const deleteButton = document.getElementById('deleteButton');
                    deleteButton.disabled = true;
                    deleteButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Deleting...';

                    // Delete payment
                    await deletePayment(paymentId);

                    // Redirect to index
                    window.location.href = './Index';
                } catch (error) {
                    console.error("Error deleting payment:", error);
                    alert("Error deleting payment. Please try again.");

                    // Re-enable button
                    deleteButton.disabled = false;
                    deleteButton.textContent = 'Delete';
                }
            });
        });
    </script>
}