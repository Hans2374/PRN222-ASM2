@page
@model PaymentCVSTS.RazorWebApp.Pages.Payments.EditModel

@{
    ViewData["Title"] = "Edit Payment";
}

<h1>Edit Payment</h1>

<h4>Payment ID: @Model.Payment.PaymentId</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form id="editForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Payment.PaymentId" id="Payment_PaymentId" />

            <div class="form-group">
                <label asp-for="Payment.Amount" class="control-label"></label>
                <input asp-for="Payment.Amount" class="form-control" type="number" step="0.01" id="Payment_Amount" />
                <span asp-validation-for="Payment.Amount" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Payment.PaymentStatus" class="control-label"></label>
                <select asp-for="Payment.PaymentStatus" class="form-control" asp-items="@ViewData["PaymentStatus"] as SelectList" id="Payment_PaymentStatus"></select>
                <span asp-validation-for="Payment.PaymentStatus" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Payment.PaymentMethod" class="control-label"></label>
                <select asp-for="Payment.PaymentMethod" class="form-control" id="Payment_PaymentMethod">
                    <option value="Credit Card">Credit Card</option>
                    <option value="Debit Card">Debit Card</option>
                    <option value="PayPal">PayPal</option>
                    <option value="Bank Transfer">Bank Transfer</option>
                    <option value="Cash">Cash</option>
                </select>
                <span asp-validation-for="Payment.PaymentMethod" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Payment.PaymentDate" class="control-label"></label>
                <input asp-for="Payment.PaymentDate" type="date" class="form-control" id="Payment_PaymentDate" />
                <span asp-validation-for="Payment.PaymentDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Payment.AppointmentId" class="control-label"></label>
                <select asp-for="Payment.AppointmentId" class="form-control" asp-items="ViewBag.AppointmentId" id="Payment_AppointmentId"></select>
                <span asp-validation-for="Payment.AppointmentId" class="text-danger"></span>
            </div>

            <div class="form-group mt-3">
                <input type="button" id="updateButton" value="Save Changes" class="btn btn-primary" />
                <a asp-page="./Index" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initialize SignalR connection
            var connection = new signalR.HubConnectionBuilder()
                .withUrl("/paymentHub")
                .build();

            // Start connection
            connection.start().then(function () {
                console.log("SignalR connected");
                $("#updateButton").prop("disabled", false);
            }).catch(function (err) {
                console.error("SignalR connection error:", err.toString());
            });

            // Form validation
            function validateForm() {
                var isValid = true;
                var errorMessages = [];

                // Validate Amount
                var amount = $("#Payment_Amount").val();
                if (!amount || amount <= 0) {
                    isValid = false;
                    errorMessages.push("Amount is required and must be greater than 0");
                    $("#Payment_Amount").addClass("is-invalid");
                } else {
                    $("#Payment_Amount").removeClass("is-invalid");
                }

                // Validate Payment Method
                var paymentMethod = $("#Payment_PaymentMethod").val();
                if (!paymentMethod) {
                    isValid = false;
                    errorMessages.push("Payment Method is required");
                    $("#Payment_PaymentMethod").addClass("is-invalid");
                } else {
                    $("#Payment_PaymentMethod").removeClass("is-invalid");
                }

                // Validate Payment Date
                var paymentDate = $("#Payment_PaymentDate").val();
                if (!paymentDate) {
                    isValid = false;
                    errorMessages.push("Payment Date is required");
                    $("#Payment_PaymentDate").addClass("is-invalid");
                } else {
                    $("#Payment_PaymentDate").removeClass("is-invalid");
                }

                // Validate Appointment ID
                var appointmentId = $("#Payment_AppointmentId").val();
                if (!appointmentId) {
                    isValid = false;
                    errorMessages.push("Appointment is required");
                    $("#Payment_AppointmentId").addClass("is-invalid");
                } else {
                    $("#Payment_AppointmentId").removeClass("is-invalid");
                }

                // Display validation summary
                if (!isValid) {
                    var errorHtml = '<div class="alert alert-danger"><ul>';
                    errorMessages.forEach(function(msg) {
                        errorHtml += '<li>' + msg + '</li>';
                    });
                    errorHtml += '</ul></div>';
                    $(".validation-summary-errors").html(errorHtml);
                    if ($(".validation-summary-errors").length === 0) {
                        $("#editForm").prepend('<div class="validation-summary-errors">' + errorHtml + '</div>');
                    }
                } else {
                    $(".validation-summary-errors").html('');
                }

                return isValid;
            }

            // Handle update button click
            $("#updateButton").click(function () {
                if (!validateForm()) {
                    return false;
                }

                var payment = {
                    paymentId: parseInt($("#Payment_PaymentId").val()),
                    amount: parseFloat($("#Payment_Amount").val()),
                    paymentStatus: $("#Payment_PaymentStatus").val(),
                    paymentMethod: $("#Payment_PaymentMethod").val(),
                    paymentDate: $("#Payment_PaymentDate").val(),
                    appointmentId: parseInt($("#Payment_AppointmentId").val())
                };

                // Show loading indicator
                $("#updateButton").prop("disabled", true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Updating...');

                // Log the payment data
                console.log("Updating payment:", payment);

                // Convert to JSON and send via SignalR
                var paymentJson = JSON.stringify(payment);
                connection.invoke("UpdatePayment", paymentJson)
                    .then(function () {
                        window.location.href = "Index";
                    })
                    .catch(function (err) {
                        console.error(err);
                        alert("Error updating payment: " + err.toString());
                        $("#updateButton").prop("disabled", false).html('Save Changes');
                    });
            });

            // Add validation on input change
            $("#Payment_Amount, #Payment_PaymentMethod, #Payment_PaymentDate, #Payment_AppointmentId").on("change", function() {
                validateForm();
            });
        });
    </script>
}